{"ast":null,"code":"var _jsxFileName = \"/Users/dreamer/coding/nhl-party-index-v2/frontend/src/components/GameListAndPartyIndex.jsx\",\n  _s = $RefreshSig$();\nimport { use, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameListAndPartyIndex() {\n  _s();\n  const [date, setDate] = useState(null);\n  const [games, setGames] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const fetchGames = async () => {\n    if (!date) return;\n    setLoading(true);\n    setError(\"\");\n    setGames([]);\n    try {\n      const isoDate = date.toISOString().slice(0, 10); // YYYY-MM-DD\n      const res = await fetch(`/get-games-from-date/${isoDate}`);\n      if (!res.ok) throw new Error(\"Failed to fetch games\");\n      const data = await res.json();\n      setGames(data);\n      console.log(games);\n    } catch (err) {\n      setError(\"Could not fetch games for that date.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Party Index by Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: date,\n      onChange: setDate,\n      dateFormat: \"yyyy-MM-dd\",\n      placeholderText: \"Select a date\",\n      maxDate: new Date(),\n      showMonthDropdown: true,\n      showYearDropdown: true,\n      dropdownMode: \"select\",\n      isClearable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchGames,\n      disabled: !date || loading,\n      children: loading ? \"Loading...\" : \"Get Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: games.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: game.awayTeam_abbrev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), \" @ \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: game.homeTeam_abbrev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 45\n        }, this), \" \\u2014 Score: \", game.awayTeam_score, \" - \", game.homeTeam_score]\n      }, game.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(GameListAndPartyIndex, \"RACKtSN5g0QPQS+npN2pB7tLZL0=\");\n_c = GameListAndPartyIndex;\nexport default GameListAndPartyIndex;\nvar _c;\n$RefreshReg$(_c, \"GameListAndPartyIndex\");","map":{"version":3,"names":["use","useState","DatePicker","jsxDEV","_jsxDEV","GameListAndPartyIndex","_s","date","setDate","games","setGames","loading","setLoading","error","setError","fetchGames","isoDate","toISOString","slice","res","fetch","ok","Error","data","json","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","dateFormat","placeholderText","maxDate","Date","showMonthDropdown","showYearDropdown","dropdownMode","isClearable","onClick","disabled","map","game","awayTeam_abbrev","homeTeam_abbrev","awayTeam_score","homeTeam_score","id","_c","$RefreshReg$"],"sources":["/Users/dreamer/coding/nhl-party-index-v2/frontend/src/components/GameListAndPartyIndex.jsx"],"sourcesContent":["import { use, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction GameListAndPartyIndex() {\n  const [date, setDate] = useState(null);\n  const [games, setGames] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const fetchGames = async () => {\n    if (!date) return;\n    setLoading(true);\n    setError(\"\")\n    setGames([]);\n    try{\n      const isoDate = date.toISOString().slice(0, 10); // YYYY-MM-DD\n      const res = await fetch(`/get-games-from-date/${isoDate}`);\n      if (!res.ok) throw new Error(\"Failed to fetch games\")\n      const data = await res.json();\n      setGames(data);\n      console.log(games);\n    } catch (err) {\n      setError(\"Could not fetch games for that date.\")\n    } finally {\n      setLoading(false);\n    }\n\n\n  };\n\n  return (\n    <div>\n      <h2>Party Index by Date</h2>\n      <DatePicker\n        selected={date}\n        onChange={setDate}\n        dateFormat=\"yyyy-MM-dd\"\n        placeholderText=\"Select a date\"\n        maxDate={new Date()}\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n        isClearable\n      />\n      <button onClick={fetchGames} disabled={!date || loading}>\n        {loading? \"Loading...\" : \"Get Games\"}\n      </button>\n      <ul>\n        {games.map(game => (\n          <li key={game.id}>\n            <b>{game.awayTeam_abbrev}</b> @ <b>{game.homeTeam_abbrev}</b> â€” \n            Score: {game.awayTeam_score} - {game.homeTeam_score}  \n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default GameListAndPartyIndex;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}